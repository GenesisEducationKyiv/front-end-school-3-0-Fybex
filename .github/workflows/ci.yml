name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '20'
  ARTIFACT_RETENTION_DAYS: '14'

jobs:
  lint:
    name: ESLint
    runs-on: ubuntu-latest
    steps:
      - name: Setup
        uses: ./.github/actions/setup
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Run ESLint
        run: npm run lint

  typecheck:
    name: TypeScript Check
    runs-on: ubuntu-latest
    steps:
      - name: Setup
        uses: ./.github/actions/setup
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: TypeScript check
        run: npm run typecheck

  build-client:
    name: Build Client
    runs-on: ubuntu-latest
    needs: [lint, typecheck]
    steps:
      - name: Setup
        uses: ./.github/actions/setup
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Build client
        run: npm run build --workspace=@music-app/client

      - name: Upload client build artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: client-build
          path: packages/client/dist/
          retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}

  build-server:
    name: Build Server
    runs-on: ubuntu-latest
    needs: [lint, typecheck]
    steps:
      - name: Setup
        uses: ./.github/actions/setup
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Build server
        run: npm run build --workspace=@music-app/server

      - name: Upload server build artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: server-build
          path: packages/server/dist/
          retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}

  test-server:
    name: Server Tests
    runs-on: ubuntu-latest
    needs: [lint, typecheck]
    steps:
      - name: Setup
        uses: ./.github/actions/setup
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Run server tests
        run: npm run server:test

  test-client-unit:
    name: Client Unit Tests
    runs-on: ubuntu-latest
    needs: [lint, typecheck]
    steps:
      - name: Run unit tests
        uses: ./.github/actions/run-test
        with:
          test-type: unit
          node-version: ${{ env.NODE_VERSION }}

  test-client-integration:
    name: Client Integration Tests
    runs-on: ubuntu-latest
    needs: [lint, typecheck]
    steps:
      - name: Run integration tests
        uses: ./.github/actions/run-test
        with:
          test-type: integration
          node-version: ${{ env.NODE_VERSION }}

  test-client-component:
    name: Client Component Tests
    runs-on: ubuntu-latest
    needs: [lint, typecheck]
    steps:
      - name: Run component tests
        uses: ./.github/actions/run-test
        with:
          test-type: ct
          needs-playwright: 'true'
          node-version: ${{ env.NODE_VERSION }}

  test-e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: [build-client, build-server]
    steps:
      - name: Download client build artifacts
        uses: actions/download-artifact@v4
        with:
          name: client-build
          path: packages/client/dist/

      - name: Download server build artifacts
        uses: actions/download-artifact@v4
        with:
          name: server-build
          path: packages/server/dist/

      - name: Run E2E tests
        uses: ./.github/actions/run-test
        with:
          test-type: e2e
          needs-playwright: 'true'
          node-version: ${{ env.NODE_VERSION }}
          env-vars: 'E2E_SKIP_BUILD=true'

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: packages/client/playwright-report/
          retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}
